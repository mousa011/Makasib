{"id":"RwXk","dependencies":[{"name":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/package.json","includedInParent":true,"mtime":1637526989355},{"name":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/package.json","includedInParent":true,"mtime":1636600861356},{"name":"../enums.js","loc":{"line":1,"column":48},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/enums.js"},{"name":"../utils/getBasePlacement.js","loc":{"line":2,"column":29},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/getBasePlacement.js"},{"name":"../utils/getMainAxisFromPlacement.js","loc":{"line":3,"column":37},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js"},{"name":"../utils/getAltAxis.js","loc":{"line":4,"column":23},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/getAltAxis.js"},{"name":"../utils/within.js","loc":{"line":5,"column":19},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/within.js"},{"name":"../dom-utils/getLayoutRect.js","loc":{"line":6,"column":26},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js"},{"name":"../dom-utils/getOffsetParent.js","loc":{"line":7,"column":28},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js"},{"name":"../utils/detectOverflow.js","loc":{"line":8,"column":27},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/detectOverflow.js"},{"name":"../utils/getVariation.js","loc":{"line":9,"column":25},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/getVariation.js"},{"name":"../utils/getFreshSideObject.js","loc":{"line":10,"column":31},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/getFreshSideObject.js"},{"name":"../utils/math.js","loc":{"line":11,"column":47},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/math.js"}],"generated":{"js":"var $RwXk$exports = {};\n$parcel$require(\"RwXk\", \"../enums.js\");\n$parcel$require(\"RwXk\", \"../utils/getBasePlacement.js\");\n$parcel$require(\"RwXk\", \"../utils/getMainAxisFromPlacement.js\");\n$parcel$require(\"RwXk\", \"../utils/getAltAxis.js\");\n$parcel$require(\"RwXk\", \"../utils/within.js\");\n$parcel$require(\"RwXk\", \"../dom-utils/getLayoutRect.js\");\n$parcel$require(\"RwXk\", \"../dom-utils/getOffsetParent.js\");\n$parcel$require(\"RwXk\", \"../utils/detectOverflow.js\");\n$parcel$require(\"RwXk\", \"../utils/getVariation.js\");\n$parcel$require(\"RwXk\", \"../utils/getFreshSideObject.js\");\n$parcel$require(\"RwXk\", \"../utils/math.js\");\n\nfunction $RwXk$var$preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = $RwXk$import$detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = $RwXk$import$getBasePlacement(state.placement);\n  var variation = $RwXk$import$getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = $RwXk$import$getMainAxisFromPlacement(basePlacement);\n  var altAxis = $RwXk$import$getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis || checkAltAxis) {\n    var mainSide = mainAxis === 'y' ? $RwXk$import$top : $RwXk$import$left;\n    var altSide = mainAxis === 'y' ? $RwXk$import$bottom : $RwXk$import$right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = popperOffsets[mainAxis] + overflow[mainSide];\n    var max = popperOffsets[mainAxis] - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === $RwXk$import$start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === $RwXk$import$start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? $RwXk$import$getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : $RwXk$import$getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = $RwXk$import$within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;\n    var arrowOffsetParent = state.elements.arrow && $RwXk$import$getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;\n    var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;\n\n    if (checkMainAxis) {\n      var preventedOffset = $RwXk$import$within(tether ? $RwXk$import$mathMin(min, tetherMin) : min, offset, tether ? $RwXk$import$mathMax(max, tetherMax) : max);\n      popperOffsets[mainAxis] = preventedOffset;\n      data[mainAxis] = preventedOffset - offset;\n    }\n\n    if (checkAltAxis) {\n      var _mainSide = mainAxis === 'x' ? $RwXk$import$top : $RwXk$import$left;\n\n      var _altSide = mainAxis === 'x' ? $RwXk$import$bottom : $RwXk$import$right;\n\n      var _offset = popperOffsets[altAxis];\n\n      var _min = _offset + overflow[_mainSide];\n\n      var _max = _offset - overflow[_altSide];\n\n      var _preventedOffset = $RwXk$import$within(tether ? $RwXk$import$mathMin(_min, tetherMin) : _min, _offset, tether ? $RwXk$import$mathMax(_max, tetherMax) : _max);\n\n      popperOffsets[altAxis] = _preventedOffset;\n      data[altAxis] = _preventedOffset - _offset;\n    }\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar $RwXk$export$default = {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: $RwXk$var$preventOverflow,\n  requiresIfExists: ['offset']\n};\n$RwXk$exports.default = $RwXk$export$default;"},"sourceMaps":null,"error":null,"hash":"c65cf81f3080f3a70503b5b096f10c49","cacheData":{"env":{},"imports":{"$RwXk$import$top":["../enums.js","top"],"$RwXk$import$left":["../enums.js","left"],"$RwXk$import$right":["../enums.js","right"],"$RwXk$import$bottom":["../enums.js","bottom"],"$RwXk$import$start":["../enums.js","start"],"$RwXk$import$getBasePlacement":["../utils/getBasePlacement.js","default"],"$RwXk$import$getMainAxisFromPlacement":["../utils/getMainAxisFromPlacement.js","default"],"$RwXk$import$getAltAxis":["../utils/getAltAxis.js","default"],"$RwXk$import$within":["../utils/within.js","default"],"$RwXk$import$getLayoutRect":["../dom-utils/getLayoutRect.js","default"],"$RwXk$import$getOffsetParent":["../dom-utils/getOffsetParent.js","default"],"$RwXk$import$detectOverflow":["../utils/detectOverflow.js","default"],"$RwXk$import$getVariation":["../utils/getVariation.js","default"],"$RwXk$import$getFreshSideObject":["../utils/getFreshSideObject.js","default"],"$RwXk$import$mathMax":["../utils/math.js","max"],"$RwXk$import$mathMin":["../utils/math.js","min"]},"exports":{"default":"$RwXk$export$default"},"wildcards":[],"sideEffects":false,"isES6Module":true}}