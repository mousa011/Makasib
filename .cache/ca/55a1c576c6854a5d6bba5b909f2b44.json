{"id":"LdP5","dependencies":[{"name":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/package.json","includedInParent":true,"mtime":1637421147719},{"name":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/postcss/package.json","includedInParent":true,"mtime":499162500000},{"name":"./container","loc":{"line":3,"column":24},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/postcss/lib/root.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/postcss/lib/container.js"}],"generated":{"js":"var $LdP5$exports = {};\n\nfunction $LdP5$var$_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { $LdP5$var$_typeof = function _typeof(obj) { return typeof obj; }; } else { $LdP5$var$_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return $LdP5$var$_typeof(obj); }\n\nfunction $LdP5$var$_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = $LdP5$var$_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction $LdP5$var$_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return $LdP5$var$_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return $LdP5$var$_arrayLikeToArray(o, minLen); }\n\nfunction $LdP5$var$_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction $LdP5$var$_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction $LdP5$var$_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction $LdP5$var$_createClass(Constructor, protoProps, staticProps) { if (protoProps) $LdP5$var$_defineProperties(Constructor.prototype, protoProps); if (staticProps) $LdP5$var$_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction $LdP5$var$_get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { $LdP5$var$_get = Reflect.get; } else { $LdP5$var$_get = function _get(target, property, receiver) { var base = $LdP5$var$_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return $LdP5$var$_get(target, property, receiver || target); }\n\nfunction $LdP5$var$_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = $LdP5$var$_getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction $LdP5$var$_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) $LdP5$var$_setPrototypeOf(subClass, superClass); }\n\nfunction $LdP5$var$_setPrototypeOf(o, p) { $LdP5$var$_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return $LdP5$var$_setPrototypeOf(o, p); }\n\nfunction $LdP5$var$_createSuper(Derived) { var hasNativeReflectConstruct = $LdP5$var$_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = $LdP5$var$_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = $LdP5$var$_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return $LdP5$var$_possibleConstructorReturn(this, result); }; }\n\nfunction $LdP5$var$_possibleConstructorReturn(self, call) { if (call && ($LdP5$var$_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return $LdP5$var$_assertThisInitialized(self); }\n\nfunction $LdP5$var$_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction $LdP5$var$_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction $LdP5$var$_getPrototypeOf(o) { $LdP5$var$_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return $LdP5$var$_getPrototypeOf(o); }\n\nvar $LdP5$var$Container = $parcel$require(\"LdP5\", \"./container\");\nvar $LdP5$var$LazyResult, $LdP5$var$Processor;\n\nvar $LdP5$var$Root = /*#__PURE__*/function (_Container) {\n  $LdP5$var$_inherits(Root, _Container);\n\n  var _super = $LdP5$var$_createSuper(Root);\n\n  function Root(defaults) {\n    var _this;\n\n    $LdP5$var$_classCallCheck(this, Root);\n    _this = _super.call(this, defaults);\n    _this.type = 'root';\n    if (!_this.nodes) _this.nodes = [];\n    return _this;\n  }\n\n  $LdP5$var$_createClass(Root, [{\n    key: \"removeChild\",\n    value: function removeChild(child, ignore) {\n      var index = this.index(child);\n\n      if (!ignore && index === 0 && this.nodes.length > 1) {\n        this.nodes[1].raws.before = this.nodes[index].raws.before;\n      }\n\n      return $LdP5$var$_get($LdP5$var$_getPrototypeOf(Root.prototype), \"removeChild\", this).call(this, child);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(child, sample, type) {\n      var nodes = $LdP5$var$_get($LdP5$var$_getPrototypeOf(Root.prototype), \"normalize\", this).call(this, child);\n\n      if (sample) {\n        if (type === 'prepend') {\n          if (this.nodes.length > 1) {\n            sample.raws.before = this.nodes[1].raws.before;\n          } else {\n            delete sample.raws.before;\n          }\n        } else if (this.first !== sample) {\n          var _iterator = $LdP5$var$_createForOfIteratorHelper(nodes),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var node = _step.value;\n              node.raws.before = sample.raws.before;\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n\n      return nodes;\n    }\n  }, {\n    key: \"toResult\",\n    value: function toResult() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var lazy = new $LdP5$var$LazyResult(new $LdP5$var$Processor(), this, opts);\n      return lazy.stringify();\n    }\n  }]);\n  return Root;\n}($LdP5$var$Container);\n\n$LdP5$var$Root.registerLazyResult = function (dependant) {\n  $LdP5$var$LazyResult = dependant;\n};\n\n$LdP5$var$Root.registerProcessor = function (dependant) {\n  $LdP5$var$Processor = dependant;\n};\n\n$LdP5$exports = $LdP5$var$Root;\n$LdP5$var$Root.default = $LdP5$var$Root;"},"sourceMaps":null,"error":null,"hash":"e802fa2c409396ea63feb28b26ee3877","cacheData":{"env":{},"imports":{"$require$./container":["./container","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}