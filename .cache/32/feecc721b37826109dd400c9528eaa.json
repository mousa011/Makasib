{"id":"E2lw","dependencies":[{"name":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/package.json","includedInParent":true,"mtime":1637526989355},{"name":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/package.json","includedInParent":true,"mtime":1636600861356},{"name":"./getWindow.js","loc":{"line":1,"column":22},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/getWindow.js"},{"name":"./getDocumentElement.js","loc":{"line":2,"column":31},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js"},{"name":"./getWindowScrollBarX.js","loc":{"line":3,"column":32},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js"}],"generated":{"js":"var $E2lw$exports = {};\n$parcel$require(\"E2lw\", \"./getWindow.js\");\n$parcel$require(\"E2lw\", \"./getDocumentElement.js\");\n$parcel$require(\"E2lw\", \"./getWindowScrollBarX.js\");\n\nfunction $E2lw$export$default(element) {\n  var win = $E2lw$import$getWindow(element);\n  var html = $E2lw$import$getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper\n  // can be obscured underneath it.\n  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even\n  // if it isn't open, so if this isn't available, the popper will be detected\n  // to overflow the bottom of the screen too early.\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n    // errors due to floating point numbers, so we need to check precision.\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\n    // Feature detection fails in mobile emulation mode in Chrome.\n    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <\n    // 0.001\n    // Fallback here: \"Not Safari\" userAgent\n\n    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + $E2lw$import$getWindowScrollBarX(element),\n    y: y\n  };\n}\n\n$E2lw$exports.default = $E2lw$export$default;"},"sourceMaps":null,"error":null,"hash":"1e118a1915473149f42139b95a7ac993","cacheData":{"env":{},"imports":{"$E2lw$import$getWindow":["./getWindow.js","default"],"$E2lw$import$getDocumentElement":["./getDocumentElement.js","default"],"$E2lw$import$getWindowScrollBarX":["./getWindowScrollBarX.js","default"]},"exports":{"default":"$E2lw$export$default"},"wildcards":[],"sideEffects":false,"isES6Module":true}}