{"id":"x3Ja","dependencies":[{"name":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/package.json","includedInParent":true,"mtime":1637526989355},{"name":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/package.json","includedInParent":true,"mtime":1636600861356},{"name":"./instanceOf.js","loc":{"line":1,"column":29},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/contains.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/instanceOf.js"}],"generated":{"js":"var $x3Ja$exports = {};\n$parcel$require(\"x3Ja\", \"./instanceOf.js\");\n\nfunction $x3Ja$export$default(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && $x3Ja$import$isShadowRoot(rootNode)) {\n    var next = child;\n\n    do {\n      if (next && parent.isSameNode(next)) {\n        return true;\n      } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n      next = next.parentNode || next.host;\n    } while (next);\n  } // Give up, the result is false\n\n\n  return false;\n}\n\n$x3Ja$exports.default = $x3Ja$export$default;"},"sourceMaps":null,"error":null,"hash":"3ba26985ad3f8b1700def3deb38710c8","cacheData":{"env":{},"imports":{"$x3Ja$import$isShadowRoot":["./instanceOf.js","isShadowRoot"]},"exports":{"default":"$x3Ja$export$default"},"wildcards":[],"sideEffects":false,"isES6Module":true}}