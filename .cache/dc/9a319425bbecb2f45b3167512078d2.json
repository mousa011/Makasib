{"id":"../node_modules/rtlcss/lib/state.js","dependencies":[{"name":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/package.json","includedInParent":true,"mtime":1637526945625},{"name":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/rtlcss/package.json","includedInParent":true,"mtime":499162500000},{"name":"./directive-parser.js","loc":{"line":3,"column":32},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/rtlcss/lib/state.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/rtlcss/lib/directive-parser.js"}],"generated":{"js":"'use strict'\r\n\r\nconst directiveParser = require('./directive-parser.js')\r\n\r\nmodule.exports = {\r\n  stack: [],\r\n  pop (current) {\r\n    const index = this.stack.indexOf(current)\r\n    if (index !== -1) {\r\n      this.stack.splice(index, 1)\r\n    }\r\n\r\n    if (!current.preserve) {\r\n      current.source.remove()\r\n    }\r\n  },\r\n  parse (node, lazyResult, callback) {\r\n    let current\r\n    const metadata = directiveParser(node)\r\n    if (metadata) {\r\n      if (!metadata.begin && metadata.end) {\r\n        this.walk((item) => {\r\n          if (metadata.name === item.metadata.name) {\r\n            this.pop(item)\r\n            current = { metadata, directive: item.directive, source: node, preserve: item.preserve }\r\n            return false\r\n          }\r\n        })\r\n      } else {\r\n        current = { metadata, directive: null, source: node, preserve: null }\r\n      }\r\n\r\n      if (current === undefined) {\r\n        lazyResult.warn(`found end \"${metadata.name}\" without a matching begin.`, { node: node })\r\n      } else if (callback(current)) {\r\n        this.stack.push(current)\r\n      } else if (!current.preserve) {\r\n        current.source.remove()\r\n      }\r\n    }\r\n  },\r\n  walk (callback) {\r\n    let len = this.stack.length\r\n    while (--len > -1) {\r\n      if (!callback(this.stack[len])) {\r\n        break\r\n      }\r\n    }\r\n  }\r\n}\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/rtlcss/lib/state.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}}],"sources":{"../node_modules/rtlcss/lib/state.js":"'use strict'\r\n\r\nconst directiveParser = require('./directive-parser.js')\r\n\r\nmodule.exports = {\r\n  stack: [],\r\n  pop (current) {\r\n    const index = this.stack.indexOf(current)\r\n    if (index !== -1) {\r\n      this.stack.splice(index, 1)\r\n    }\r\n\r\n    if (!current.preserve) {\r\n      current.source.remove()\r\n    }\r\n  },\r\n  parse (node, lazyResult, callback) {\r\n    let current\r\n    const metadata = directiveParser(node)\r\n    if (metadata) {\r\n      if (!metadata.begin && metadata.end) {\r\n        this.walk((item) => {\r\n          if (metadata.name === item.metadata.name) {\r\n            this.pop(item)\r\n            current = { metadata, directive: item.directive, source: node, preserve: item.preserve }\r\n            return false\r\n          }\r\n        })\r\n      } else {\r\n        current = { metadata, directive: null, source: node, preserve: null }\r\n      }\r\n\r\n      if (current === undefined) {\r\n        lazyResult.warn(`found end \"${metadata.name}\" without a matching begin.`, { node: node })\r\n      } else if (callback(current)) {\r\n        this.stack.push(current)\r\n      } else if (!current.preserve) {\r\n        current.source.remove()\r\n      }\r\n    }\r\n  },\r\n  walk (callback) {\r\n    let len = this.stack.length\r\n    while (--len > -1) {\r\n      if (!callback(this.stack[len])) {\r\n        break\r\n      }\r\n    }\r\n  }\r\n}\r\n"},"lineCount":51}},"error":null,"hash":"c9efbb8b391f7dfd7868d88a162f0c43","cacheData":{"env":{}}}