{"id":"HhJi","dependencies":[{"name":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/package.json","includedInParent":true,"mtime":1637526989355},{"name":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/package.json","includedInParent":true,"mtime":1636600861356},{"name":"./getVariation.js","loc":{"line":1,"column":25},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/getVariation.js"},{"name":"../enums.js","loc":{"line":2,"column":81},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/enums.js"},{"name":"./detectOverflow.js","loc":{"line":3,"column":27},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/detectOverflow.js"},{"name":"./getBasePlacement.js","loc":{"line":4,"column":29},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/getBasePlacement.js"}],"generated":{"js":"var $HhJi$exports = {};\n$parcel$require(\"HhJi\", \"./getVariation.js\");\n$parcel$require(\"HhJi\", \"../enums.js\");\n$parcel$require(\"HhJi\", \"./detectOverflow.js\");\n$parcel$require(\"HhJi\", \"./getBasePlacement.js\");\n\nfunction $HhJi$export$default(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? $HhJi$import$allPlacements : _options$allowedAutoP;\n  var variation = $HhJi$import$getVariation(placement);\n  var placements = variation ? flipVariations ? $HhJi$import$variationPlacements : $HhJi$import$variationPlacements.filter(function (placement) {\n    return $HhJi$import$getVariation(placement) === variation;\n  }) : $HhJi$import$basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n\n    if (\"production\" !== \"production\") {\n      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(' '));\n    }\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = $HhJi$import$detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[$HhJi$import$getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}\n\n$HhJi$exports.default = $HhJi$export$default;"},"sourceMaps":null,"error":null,"hash":"9ce4925bc01d6623f87d3c7dd3cfd65a","cacheData":{"env":{"NODE_ENV":"production"},"imports":{"$HhJi$import$getVariation":["./getVariation.js","default"],"$HhJi$import$variationPlacements":["../enums.js","variationPlacements"],"$HhJi$import$basePlacements":["../enums.js","basePlacements"],"$HhJi$import$allPlacements":["../enums.js","placements"],"$HhJi$import$detectOverflow":["./detectOverflow.js","default"],"$HhJi$import$getBasePlacement":["./getBasePlacement.js","default"]},"exports":{"default":"$HhJi$export$default"},"wildcards":[],"sideEffects":false,"isES6Module":true}}