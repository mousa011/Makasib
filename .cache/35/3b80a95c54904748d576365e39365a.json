{"id":"rg1d","dependencies":[{"name":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/package.json","includedInParent":true,"mtime":1637526989355},{"name":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/package.json","includedInParent":true,"mtime":1636600861356},{"name":"./dom-utils/getCompositeRect.js","loc":{"line":1,"column":29},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/createPopper.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js"},{"name":"./dom-utils/getLayoutRect.js","loc":{"line":2,"column":26},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/createPopper.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js"},{"name":"./dom-utils/listScrollParents.js","loc":{"line":3,"column":30},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/createPopper.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js"},{"name":"./dom-utils/getOffsetParent.js","loc":{"line":4,"column":28},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/createPopper.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js"},{"name":"./dom-utils/getComputedStyle.js","loc":{"line":5,"column":29},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/createPopper.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js"},{"name":"./utils/orderModifiers.js","loc":{"line":6,"column":27},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/createPopper.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/orderModifiers.js"},{"name":"./utils/debounce.js","loc":{"line":7,"column":21},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/createPopper.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/debounce.js"},{"name":"./utils/validateModifiers.js","loc":{"line":8,"column":30},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/createPopper.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/validateModifiers.js"},{"name":"./utils/uniqueBy.js","loc":{"line":9,"column":21},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/createPopper.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/uniqueBy.js"},{"name":"./utils/getBasePlacement.js","loc":{"line":10,"column":29},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/createPopper.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/getBasePlacement.js"},{"name":"./utils/mergeByName.js","loc":{"line":11,"column":24},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/createPopper.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/mergeByName.js"},{"name":"./utils/detectOverflow.js","loc":{"line":12,"column":27},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/createPopper.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/utils/detectOverflow.js"},{"name":"./dom-utils/instanceOf.js","loc":{"line":13,"column":26},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/createPopper.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/dom-utils/instanceOf.js"},{"name":"./enums.js","loc":{"line":14,"column":21},"parent":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/createPopper.js","resolved":"/Users/muhammadmousa/Desktop/my work/مكاسب/Makasib/node_modules/@popperjs/core/lib/enums.js"}],"generated":{"js":"var $rg1d$exports = {};\n$parcel$require(\"rg1d\", \"./dom-utils/getCompositeRect.js\");\n$parcel$require(\"rg1d\", \"./dom-utils/getLayoutRect.js\");\n$parcel$require(\"rg1d\", \"./dom-utils/listScrollParents.js\");\n$parcel$require(\"rg1d\", \"./dom-utils/getOffsetParent.js\");\n$parcel$require(\"rg1d\", \"./dom-utils/getComputedStyle.js\");\n$parcel$require(\"rg1d\", \"./utils/orderModifiers.js\");\n$parcel$require(\"rg1d\", \"./utils/debounce.js\");\n$parcel$require(\"rg1d\", \"./utils/validateModifiers.js\");\n$parcel$require(\"rg1d\", \"./utils/uniqueBy.js\");\n$parcel$require(\"rg1d\", \"./utils/getBasePlacement.js\");\n$parcel$require(\"rg1d\", \"./utils/mergeByName.js\");\n$parcel$require(\"rg1d\", \"./utils/detectOverflow.js\");\n$parcel$require(\"rg1d\", \"./dom-utils/instanceOf.js\");\n$parcel$require(\"rg1d\", \"./enums.js\");\nvar $rg1d$var$INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';\nvar $rg1d$var$INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';\nvar $rg1d$var$DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction $rg1d$var$areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nfunction $rg1d$export$popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? $rg1d$var$DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, $rg1d$var$DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: $rg1d$import$isElement(reference) ? $rg1d$import$listScrollParents(reference) : reference.contextElement ? $rg1d$import$listScrollParents(reference.contextElement) : [],\n          popper: $rg1d$import$listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = $rg1d$import$orderModifiers($rg1d$import$mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        }); // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n\n        if (\"production\" !== \"production\") {\n          var modifiers = $rg1d$import$uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref) {\n            var name = _ref.name;\n            return name;\n          });\n          $rg1d$import$validateModifiers(modifiers);\n\n          if ($rg1d$import$getBasePlacement(state.options.placement) === $rg1d$import$auto) {\n            var flipModifier = state.orderedModifiers.find(function (_ref2) {\n              var name = _ref2.name;\n              return name === 'flip';\n            });\n\n            if (!flipModifier) {\n              console.error(['Popper: \"auto\" placements require the \"flip\" modifier be', 'present and enabled to work.'].join(' '));\n            }\n          }\n\n          var _getComputedStyle = $rg1d$import$getComputedStyle(popper),\n              marginTop = _getComputedStyle.marginTop,\n              marginRight = _getComputedStyle.marginRight,\n              marginBottom = _getComputedStyle.marginBottom,\n              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can\n          // cause bugs with positioning, so we'll warn the consumer\n\n\n          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {\n            return parseFloat(margin);\n          })) {\n            console.warn(['Popper: CSS \"margin\" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));\n          }\n        }\n\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!$rg1d$var$areValidElements(reference, popper)) {\n          if (\"production\" !== \"production\") {\n            console.error($rg1d$var$INVALID_ELEMENT_ERROR);\n          }\n\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: $rg1d$import$getCompositeRect(reference, $rg1d$import$getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: $rg1d$import$getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n        var __debug_loops__ = 0;\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (\"production\" !== \"production\") {\n            __debug_loops__ += 1;\n\n            if (__debug_loops__ > 100) {\n              console.error($rg1d$var$INFINITE_LOOP_ERROR);\n              break;\n            }\n          }\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: $rg1d$import$debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!$rg1d$var$areValidElements(reference, popper)) {\n      if (\"production\" !== \"production\") {\n        console.error($rg1d$var$INVALID_ELEMENT_ERROR);\n      }\n\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref3) {\n        var name = _ref3.name,\n            _ref3$options = _ref3.options,\n            options = _ref3$options === void 0 ? {} : _ref3$options,\n            effect = _ref3.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\n\n$rg1d$exports.popperGenerator = $rg1d$export$popperGenerator;\nvar $rg1d$export$createPopper = /*#__PURE__*/$rg1d$export$popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\n$rg1d$exports.createPopper = $rg1d$export$createPopper;\n$rg1d$exports.detectOverflow = $rg1d$import$detectOverflow;"},"sourceMaps":null,"error":null,"hash":"369993f17293888ebc45d35fd22c1649","cacheData":{"env":{"NODE_ENV":"production"},"imports":{"$rg1d$import$getCompositeRect":["./dom-utils/getCompositeRect.js","default"],"$rg1d$import$getLayoutRect":["./dom-utils/getLayoutRect.js","default"],"$rg1d$import$listScrollParents":["./dom-utils/listScrollParents.js","default"],"$rg1d$import$getOffsetParent":["./dom-utils/getOffsetParent.js","default"],"$rg1d$import$getComputedStyle":["./dom-utils/getComputedStyle.js","default"],"$rg1d$import$orderModifiers":["./utils/orderModifiers.js","default"],"$rg1d$import$debounce":["./utils/debounce.js","default"],"$rg1d$import$validateModifiers":["./utils/validateModifiers.js","default"],"$rg1d$import$uniqueBy":["./utils/uniqueBy.js","default"],"$rg1d$import$getBasePlacement":["./utils/getBasePlacement.js","default"],"$rg1d$import$mergeByName":["./utils/mergeByName.js","default"],"$rg1d$import$detectOverflow":["./utils/detectOverflow.js","default"],"$rg1d$import$isElement":["./dom-utils/instanceOf.js","isElement"],"$rg1d$import$auto":["./enums.js","auto"]},"exports":{"popperGenerator":"$rg1d$export$popperGenerator","createPopper":"$rg1d$export$createPopper","detectOverflow":["./utils/detectOverflow.js","default"]},"wildcards":[],"sideEffects":false,"isES6Module":true}}